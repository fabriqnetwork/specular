apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    io.specular.network/sp-network: "true"
    io.specular.service: sp-magi
  name: sp-magi
spec:
  initContainers:
    - name: wait-for-sp-geth
      image: busybox:latest
      command: ["sh", "-c", "until [ -f /tmp/.start_sp_geth.sh.lock ]; do sleep 2; done"]
      volumeMounts:
        - mountPath: /tmp
          name: {{ .Values.volume.efs.name }}
  containers:
    - name: sp-magi
      command: ["bash", "-c", "../sbin/entrypoint.sh start start_sp_magi.sh"]
      image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
      livenessProbe:
        exec:
          command: ["sh", "-c", "test -e /specular/workspace/.start_sp_magi.sh.lock"]
        failureThreshold: 300
        initialDelaySeconds: 20
        periodSeconds: 10
      lifecycle:
        preStop:
          exec:
            command: ["sh", "-c", "rm -f /specular/workspace/.start_sp_magi.sh.lock"]
      resources:
        {{- .Values.default_resources |  toYaml | nindent 10 }}
      volumeMounts:
        - mountPath: {{ .Values.volume.efs.mountPath }}
          name: {{ .Values.volume.efs.name }}
{{- range $i, $value := .Values.volume.configVolumeMounts.paths }}
        - name: {{ $.Values.volume.configVolumeMounts.name }}
          mountPath: {{ $.Values.volume.efs.mountPath }}/{{ $value }}
          subPath: {{ $value }}
{{- end }}
  {{- range $i, $value := .Values.volume.secrets }}
        - name: secret-volume
          mountPath: {{ $.Values.volume.efs.mountPath }}/{{ $value.file }}
          subPath: {{ $value.file }}
          readOnly: true
  {{- end }}
      workingDir: {{ .Values.volume.efs.mountPath }}
  terminationGracePeriodSeconds: 60
  restartPolicy: OnFailure
  volumes:
    - name: {{ .Values.volume.efs.name }}
      persistentVolumeClaim:
        claimName: {{ .Values.volume.efs.name }}
    - name: {{ .Values.volume.configVolumeMounts.name }}
      configMap:
        name: {{ .Values.volume.configVolumeMounts.name }}
    - name: secret-volume
      secret:
        secretName: l2-secrets
status: {}
